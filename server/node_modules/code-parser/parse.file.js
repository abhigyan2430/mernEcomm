const parseFile = async ({ text, name }, project, user) => {
    const meta = {
        name,
        user: 'rmozeika',
        project: 'rift'
    };
    const file = parseText(text);
    // const found = await codeRepo.findOne(meta, 'code.file');
    // console.log(found)
    // const insert = await codeRepo.insertOne(meta, 'code.file');
    const foundUpdate = await codeRepo.findOneAndUpdate({
        filter: { name: fileName },
        doc: { $set: meta},
        opts: { upsert: true }
    }, 'code.file');
    Object.keys(file).forEach(key => {
        if (key == types.program) {
            return iterateProgram(file[key].body, insertedId);
        }
    })
    scaffold.file.push(meta);
}

const parseText = () => {
    const obj = babel.parse(text, {
        // parse in strict mode and allow module declarations
        sourceType: "module",

        plugins: [
            // enable jsx and flow syntax
            "jsx",
            "flow"
        ]
    });
}

module.exports = parseFile;